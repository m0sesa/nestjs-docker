# Infrastructure Commands - NestJS Docker Backend

# Development commands
dev-up:
    @echo "🚀 Starting development environment..."
    @./scripts/setup-dev.sh

dev-down:
    @echo "🛑 Stopping development environment..."
    @docker-compose -f docker/docker-compose.dev.yml down -v --remove-orphans

dev-logs:
    @docker-compose -f docker/docker-compose.dev.yml logs -f

dev-restart:
    @echo "🔄 Restarting development environment..."
    @just dev-down
    @just dev-up

# Production commands  
prod-up:
    @echo "🚀 Starting production environment..."
    @./scripts/setup-prod.sh

prod-down:
    @echo "🛑 Stopping production environment..."
    @docker-compose -f docker/docker-compose.prod.yml down
    @docker-compose -f docker/docker-compose.traefik.yml down

prod-logs:
    @docker-compose -f docker/docker-compose.prod.yml logs -f

prod-app-only:
    @echo "🚀 Starting production app only (Traefik already running)..."
    @docker-compose -f docker/docker-compose.prod.yml up -d

prod-traefik-only:
    @echo "🚀 Starting Traefik only..."
    @docker-compose -f docker/docker-compose.traefik.yml up -d

# Application commands (running in app directory)
app-install:
    @echo "📦 Installing application dependencies..."
    @cd ../app && npm install

app-dev:
    @echo "🚀 Starting application in development mode..."
    @cd ../app && npm run start:dev

app-build:
    @echo "🔨 Building application..."
    @cd ../app && npm run build

app-test:
    @echo "🧪 Running application tests..."
    @cd ../app && npm test

app-test-e2e:
    @echo "🧪 Running end-to-end tests..."
    @cd ../app && npm run test:e2e

# Admin panel commands
admin-install:
    @echo "📦 Installing admin panel dependencies..."
    @cd ../admin && npm install

admin-dev:
    @echo "🚀 Starting admin panel in development mode..."
    @cd ../admin && npm run dev

admin-build:
    @echo "🔨 Building admin panel..."
    @cd ../admin && npm run build

admin-logs:
    @docker logs admin-panel-dev -f

# Utility commands
clean:
    @echo "🧹 Cleaning up Docker resources..."
    @docker system prune -f
    @docker volume prune -f

build:
    @echo "🔨 Building production Docker images..."
    @docker-compose -f docker/docker-compose.prod.yml build --no-cache

ssl-certs:
    @echo "🔐 Generating SSL certificates for development..."
    @cd traefik/certs && mkcert "*.interestingapp.local" interestingapp.local

open-services:
    @echo "🌐 Opening development services in browser..."
    @open https://admin.interestingapp.local
    @open https://api.interestingapp.local/api/docs
    @open https://mail.interestingapp.local
    @open https://pgadmin.interestingapp.local
    @open https://traefik.interestingapp.local

# Environment management
env-setup:
    @echo "📋 Setting up environment files..."
    @cp .env.example .env.development
    @cp .env.production.example .env.production
    @echo "✅ Edit .env.development and .env.production with your values"

# Help command
help:
    @echo "🚀 Infrastructure Commands - NestJS Docker Backend"
    @echo ""
    @echo "📋 Development Environment:"
    @echo "  dev-up        - Start development environment with HTTPS"
    @echo "  dev-down      - Stop development environment"
    @echo "  dev-logs      - Follow development logs"
    @echo "  dev-restart   - Restart development environment"
    @echo ""
    @echo "🚀 Production Environment:"
    @echo "  prod-up               - Start production (Traefik + App)"
    @echo "  prod-down             - Stop production environment"
    @echo "  prod-logs             - Follow production logs"
    @echo "  prod-app-only         - Start only the app (Traefik running separately)"
    @echo "  prod-traefik-only     - Start only Traefik"
    @echo ""
    @echo "🛠️  Application Development:"
    @echo "  app-install   - Install application dependencies"
    @echo "  app-dev       - Start app in development mode (without Docker)"
    @echo "  app-build     - Build application"
    @echo "  app-test      - Run application tests"
    @echo "  app-test-e2e  - Run end-to-end tests"
    @echo ""
    @echo "🎨 Admin Panel:"
    @echo "  admin-install - Install admin panel dependencies"
    @echo "  admin-dev     - Start admin panel in development mode"
    @echo "  admin-build   - Build admin panel"
    @echo "  admin-logs    - View admin panel logs"
    @echo ""
    @echo "🧹 Utilities:"
    @echo "  build         - Build production Docker images"
    @echo "  clean         - Clean up Docker resources"
    @echo "  ssl-certs     - Generate development SSL certificates"
    @echo "  open-services - Open all development services in browser"
    @echo "  env-setup     - Create environment files from examples"