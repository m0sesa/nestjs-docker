services:
  app:
    build:
      context: ../../app
      target: production
    container_name: nestjs-app-prod
    restart: unless-stopped
    env_file:
      - ../.env.production
    depends_on:
      - postgres
    networks:
      - app-network
      - traefik

  postgres:
    image: postgres:15-alpine
    container_name: postgres-prod
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${DB_USERNAME:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE:-nestjs_prod}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - app-network

  admin:
    build:
      context: ../../admin
      target: production
    container_name: admin-panel-prod
    restart: unless-stopped
    environment:
      - NUXT_PUBLIC_API_BASE_URL=${ADMIN_API_URL:-https://api.yourdomain.com}
      - NODE_ENV=production
    depends_on:
      - app
    networks:
      - traefik

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
  traefik:
    external: true