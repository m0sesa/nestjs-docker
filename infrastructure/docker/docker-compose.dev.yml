services:
  app:
    build:
      context: ../../app
      target: development
    container_name: nestjs-app-dev
    volumes:
      - ../../app:/app
      - /app/node_modules
    env_file:
      - ../.env.development
    depends_on:
      - postgres
      - mailhog
    networks:
      - app-network
      - traefik-network

  postgres:
    image: postgres:15-alpine
    container_name: postgres-dev
    env_file:
      - ../.env.development
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - app-network

  mailhog:
    image: mailhog/mailhog:latest
    container_name: mailhog-dev
    networks:
      - app-network
      - traefik-network

  adminer:
    image: adminer
    container_name: adminer-dev
    env_file:
      - ../.env.development
    depends_on:
      - postgres
    networks:
      - app-network
      - traefik-network

  admin:
    build:
      context: ../../admin
      target: development
    container_name: admin-panel-dev
    volumes:
      - ../../admin:/app
      - /app/node_modules
      - /app/.nuxt
    environment:
      - NUXT_PUBLIC_API_BASE_URL=https://api.interestingapp.local
      - NODE_ENV=development
    depends_on:
      - app
    networks:
      - traefik-network

  traefik:
    image: traefik:v2.10
    container_name: traefik-dev
    restart: unless-stopped
    command:
      - --configFile=/etc/traefik/traefik.yml
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ../traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - ../traefik/config:/config:ro
      - ../traefik/certs:/certs:ro
    networks:
      - traefik-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
  traefik-network:
    driver: bridge